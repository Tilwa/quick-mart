// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String @id @default(uuid())
  email     String @unique
  name      String
  image     String?  // Optional profile picture
  role      String @default("user")  // Default role as 'user'
  createdAt DateTime @default(now())
}
model Product {
  id            Int            @id @default(autoincrement())
  title         String
  description   String
  brand         String?
  category      String
  offerPrice    Float
  originalPrice Float
  inStock       Int?
  image1        String
  image2        String?
  image3        String?
  image4        String?
  image5        String?
  createdAt     DateTime       @default(now())
  colors        ProductColor[]
  sizes         ProductSize[]
}

model ProductColor {
  id        Int     @id @default(autoincrement())
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  color     Color   @relation(fields: [colorId], references: [id])
  colorId   Int
  @@unique([productId, colorId])
}

model ProductSize {
  id        Int     @id @default(autoincrement())
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  size      Size    @relation(fields: [sizeId], references: [id])
  sizeId    Int
  @@unique([productId, sizeId])
}

model Color {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  hexCode   String
  products  ProductColor[]
}

model Size {
  id        Int       @id @default(autoincrement())
  label     String    @unique
  products  ProductSize[]
}


model Order {
  id           Int      @id @default(autoincrement())
  name         String
  mobile       String
  quantity     Int
  emirate      String
  address      String
  price        Float
  productId    Int
  productTitle String
  variantColor String?
  variantSize  String?
  variantImage String?
  createdAt    DateTime @default(now())
  status       String   @default("pending") // âœ… New status field
}

model Analytics {
  id        String   @id @default(uuid())
  sessionId String
  country   String
  page      String
  timestamp DateTime @default(now())
  bounce    Boolean
}
